#!/bin/bash

helpmessage() {
   echo -e "usage: till\n"
   echo -e "   -a, --all      use all files found"
   echo -e "   -c, --config   cmsrun config"
   echo -e "   -e, --echo     print run numbers"
   echo -e "   -f, --forward  forward arguments to grow"
   echo -e "   -g, --grow     grow trees directly"
   echo -e "   -h, --help     show (this) help message"
   echo -e "   -l, --logs     logs directory"
   echo -e "   -n             number of files"
   echo -e "   -o, --output   output directory"
   echo -e "   -r, --runs     runs to omit"
   echo -e "   -s, --stream   data streamer"
   echo -e "   -u, --update   update [runs] with runs"
}

ARGS=()

while [ $# -gt 0 ]; do
   case "$1" in
      -a|--all)      all=1; shift ;;
      -c|--config)   config="$2"; shift 2 ;;
      --config=*)    config="${1#*=}"; shift ;;
      -e|--echo)     recho=1; shift ;;
      -f|--forward)  fwargs="$2"; shift 2 ;;
      --forward=*)   fwargs="${1#*=}"; shift ;;
      -g|--grow)     grow=1; shift ;;
      -h|--help)     helpmessage; exit 0 ;;
      -l|--logs)     log="$2"; shift 2 ;;
      --logs=*)      out="${1#*=}"; shift ;;
      -n)            n="$2"; shift 2 ;;
      -n=*)          n="${1#*=}"; shift ;;
      -o|--output)   out="$2"; shift 2 ;;
      --output=*)    out="${1#*=}"; shift ;;
      -r|--runs)     runs="$2"; shift 2 ;;
      --runs=*)      runs="${1#*=}"; shift ;;
      -s|--stream)   stream="$2"; shift 2 ;;
      --stream=*)    stream="${1#*=}"; shift ;;
      -u|--update)   update=1; shift ;;
      -*)            echo -e "invalid option: $1\n"; exit 1 ;;
      *)             ARGS+=("$1"); shift ;;
   esac
done

set -- "${ARGS[@]}"

[ $# -ne 0 ] && { echo -e "check arguments\n"; exit 1; }

[ $grow -a ! $config ] && {
   echo -e "  \033[31mno tree (config) to grow\033[0m\n"; exit 1; }
[ ! $grow -a $update ] && {
   echo -e "  \033[31mcannot update without growing\033[0m\n"; exit 1; }

[ ! -f $runs ] && {
   echo -e "  \033[31mfile not found: $runs\033[0m\n"; exit 1; }
[ ! $runs -a $update ] && {
   echo -e "  \033[31mno file to update\033[0m\n"; exit 1; }

[ $out ] &&
   outdir=$(readlink -f $out) ||
   outdir=/eos/cms/store/group/phys_heavyions/rbi/farm/
[ $log ] &&
   logdir=$(readlink -f $log) ||
   logdir=/afs/cern.ch/work/r/rbi/private/logs/farm/
[ $stream ] || stream=HIPhysicsMinimumBiasReducedFormat8

data=/eos/cms/store/t0streamer/Data/$stream/000

[ $n ] && [ $all ] && echo -e "  \033[31m--all overwrites -n\033[0m\n"
[ $n ] || n=4

runs=()

for high in $(ls $data); do
   for low in $(ls $data/$high); do
      run=$high$low

      [ $runs ] && grep -Fqx "$run" $runs ||
         runs+=("$run")
   done
done

[ ${#runs[@]} -eq 0 ] && {
   echo -e "  \033[31mno new runs\033[0m\n"; exit 0; }

[ $recho ] && { printf '%s\n' "${runs[@]}"; exit 0; }

for run in ${runs[@]}; do
   mkdir -p $logdir/$run/
   list=$logdir/$run/till_${stream}_$run.list

   files=($data/$high/$low/*)
   nfiles=${#files[@]}; nf=$n
   [ $all -o $nfiles -lt $nf ] && nf=$nfiles
   indices=($(shuf -i 1-$nfiles -n $nf))
   for i in "${indices[@]}"; do
      echo "file:${files[$((i-1))]}" >> $list
   done

   if [ ! $grow ]; then
      echo "./grow $fwargs $list $config -l $logdir/$run -o $outdir/$run"
   else
      echo -e "  prepared: \033[34m$list\033[0m"
      grow $fwargs -l $logdir/$run/ -o $outdir/$run/ $list $config
      [ $update -a $runs ] && echo $run >> $runs
   fi
done
