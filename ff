#!/bin/bash

helpmessage() {
   echo -e "usage: ff [input] {tag}\n"
   echo -e "   -c, --clone    clone first branch (directory)"
   echo -e "   -h, --help     show (this) help message"
   echo -e "   -o, --out      output directory"
   echo -e "   -v, --val      path to forest validation executable"
}

ARGS=()

while [ $# -gt 0 ]; do
   case "$1" in
      -c|--clone)    clone=1; shift ;;
      -h|--help)     helpmessage; exit 0 ;;
      -o|--out)      out="$2"; shift 2 ;;
      --out=*)       out="${1#*=}"; shift ;;
      -v|--val)      val="$2"; shift 2 ;;
      --val=*)       val="${1#*=}"; shift ;;
      -*|--*)        echo -e "invalid option: $1\n"; exit 1 ;;
      *)             ARGS+=("$1"); shift ;;
   esac
done

set -- "${ARGS[@]}"

[ $# -lt 1 ] && { echo -e "check arguments\n"; exit 1; }

[ $val ] &&
   valdir=$(readlink -f $val) ||
   valdir=/afs/cern.ch/user/r/rbi/cmssw/CMSSW_10_3_0/src/ForestValidation

input=$(readlink -f $1); shift
tag=$1; [ -z "$tag" ] && tag=vff; shift

[ $out ] &&
   outdir=$(readlink -f $out) ||
   outdir=$(pwd)/vff-output
mkdir -p $outdir

# navigate to forest validation directory
pushd $valdir &> /dev/null
eval `scramv1 runtime -sh`
make -j8

branches=($(ls $input/* -d))
[ $clone ] && {
   echo -e "  clone branch: \033[31m${branches[0]}\033[0m"
   branches=("${branches[0]}" "${branches[@]}")
}

for b in ${branches[@]}; do
   argl=$argl,$(basename $b)
done
argl="${argl:1}"
brtag=$(echo "$argl" | tr ',' '_')

files=$(ls ${branches[0]}/*.root)

for f in ${files[@]}; do
   argf=
   for b in ${branches[@]}; do
      argf=$argf,$b/$(basename $f)
   done
   argf="${argf:1}"

   filetag=$tag-$(basename $f .root)
   fulltag=${filetag}_${brtag}
   date=$(date +"%Y%m%d")

   echo -e "  processing: \033[34m$(basename $f)\033[0m"
   ./bin/runForestDQM.exe $argf $filetag $argl "$@" &> $outdir/rfd-$fulltag.log

   base=forestDQM_${fulltag}_${date}VALIDATION_MAIN_AllTrees_${date}

   pushd pdfDir/$date/forestDQM_${fulltag}_${date} &> /dev/null
   echo -ne "   \033[33mcompiling tex\033[0m\r"
   pdflatex $base.tex &> $outdir/tex-$base.log
   echo -e  "   \033[32mcompiling tex\033[0m"
   mv $base.pdf $outdir
   popd &> /dev/null
done

echo
echo -e "  output directory: \033[32m$outdir\033[0m"
