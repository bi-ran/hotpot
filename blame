#!/usr/bin/env python

from __future__ import print_function

import argparse

from collections import defaultdict

def parse_times(params):
    times = []
    with open(params['log']) as f:
        for l in f:
            if not l.startswith('TimeModule>'):
                continue

            _, event, _, label, module, time = l.strip().split(' ')
            times.append((event, label, module, float(time) * 1000))

    key = params['key']

    # build dict, sorting on (event | label [default] | module)
    times_per_key = defaultdict(list)
    for t in times:
        times_per_key[t[key]].append(t[3])

    for k, v in sorted(times_per_key.items(), key=lambda x: x[1]):
        print('{:>72}: {:.4f}'.format(k, sum(v)/len(v)))


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('log')
    parser.add_argument('-k', '--key', nargs='?', default=1, const=1, type=int)

    args = parser.parse_args()

    parse_times(vars(args))
