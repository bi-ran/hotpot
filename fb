#!/bin/bash

helpmessage() {
   echo -e "usage: fb [branches...]\n"
   echo -e "   -h, --help     show (this) help message"
   echo -e "   -o, --out      output directory"
}

function run_configs {
   branch=$1
   output=$(readlink -f $2)

   cmdlog=$output/cmd.log

   # checkout branch
   echo -e "  checking out branch: \033[32m$branch\033[0m"
   git checkout $branch &> $cmdlog

   pushd HeavyIonsAnalysis/JetAnalysis/python/jets/ >> $cmdlog

   # regenerate jet sequences
   rm ak*JetSequence_*_*_cff.py*
   ./makeJetSequences.sh

   popd >> $cmdlog

   # clean and rebuild
   # scram b distclean
   scram b -j4 &> $output/build.log >> $cmdlog 2>&1

   pushd HeavyIonsAnalysis/JetAnalysis/test/ >> $cmdlog

   # run all foresting configs
   for config in $(ls runForestAOD_*.py); do
      # run all events for validation
      sed -i 's/input = cms.untracked.int32(1)/input = cms.untracked.int32(-1)/' $config

      echo -e "   running: \033[34m$config\033[0m"
      cmsRun $config &> ${config%.*}.log
      [ $? -eq 0 ] && mv HiForestAOD.root $output/HiForestAOD_${config%.*}.root
      mv ${config%.*}.log $output

      # revert change
      sed -i 's/input = cms.untracked.int32(-1)/input = cms.untracked.int32(1)/' $config
   done

   echo
   popd >> $cmdlog
}

ARGS=()

while [ $# -gt 0 ]; do
   case "$1" in
      -h|--help)     helpmessage; exit 0 ;;
      -o|--out)      out="$2"; shift 2 ;;
      --out=*)       out="${1#*=}"; shift ;;
      -*|--*)        echo -e "invalid option: $1\n"; exit 1 ;;
      *)             ARGS+=("$1"); shift ;;
   esac
done

set -- "${ARGS[@]}"
echo

branches=( "$@" )
[ $out ] &&
   outdir=$(readlink -f $out) ||
   outdir=$(pwd)/fb-output/
outdir=$outdir/forests

# check cms environment
if [[ -z $CMSSW_BASE || $(pwd)/ != $CMSSW_BASE/* ]]; then
   echo -e "current directory: $pwd does not match cmsenv: $CMSSW_BASE\n"
   exit 1
fi

pushd $CMSSW_BASE/src/ > /dev/null

# check for uncommitted changes
if ! git diff-index --quiet HEAD; then
   echo -e "there are uncommitted changes\n"
   exit 1
fi

# produce forest files
for branch in ${branches[@]}; do
   mkdir -p $outdir/$branch/
   run_configs $branch $outdir/$branch/
done

popd > /dev/null

echo -e "  done!\n"
